{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","data-slide-type","id","data-slice-type","viewBox","cx","cy","r","d","href","type","tabIndex","name","placeholder","points","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mQAkEeA,sMA1DP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBC,kBAAgB,eACjDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8GACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2HACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0GACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DAA8DE,GAAG,iCAAiCC,kBAAgB,QAC/HN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,QAAQ,aACXP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,UAAQM,GAAI,GAAIC,GAAI,GAAIC,EAAG,MAE7BV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YACXH,EAAAC,EAAAC,cAAA,QAAMS,EAAE,uIAEVX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YACXH,EAAAC,EAAAC,cAAA,QAAMS,EAAE,mKAMlBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oEAAoEG,kBAAgB,WAAUN,EAAAC,EAAAC,cAAA,MAAIG,GAAG,yBAAP,YAE7GL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DAA8DG,kBAAgB,QAC3FN,EAAAC,EAAAC,cAAA,+CAAsCF,EAAAC,EAAAC,cAAA,KAAGU,KAAK,0BAAR,oBAAtC,4HAAoNZ,EAAAC,EAAAC,cAAA,KAAGU,KAAK,gCAAR,yBAAgEZ,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAA1R,wEAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4GAA4GG,kBAAgB,YACzIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWC,SAAU,EAAGC,KAAK,WAAWC,YAAY,aAChEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YACXH,EAAAC,EAAAC,cAAA,WAASe,OAAO,sFAM1BjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCA/CvBe,cCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzB,EAAAC,EAAAC,cAACwB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5ce1eddd.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './styles/home.css';\nimport './styles/slides.min.css';\nimport './styles/slide-normalize.css';\n\nclass App extends Component {\n    render() {\n        return (\n          <div className=\"sqs-slide-wrapper\" data-slide-type=\"lock-screen\">\n            <div className=\"sqs-slide-container lock-size-extra-small lock-style-border lock-shape-rounded password-style-underlined  \">\n              <div className=\"sqs-slide yui3-widget yui3-lockfullcenter01 yui3-lockfullcenter01-content sqs-slide-ready yui3-lockfullcenter01-focused\">\n                <div className=\"sqs-slide-layer layer-front full-width-height\">\n                  <div className=\"sqs-slide-layer-content\">\n                    <div className=\"sqs-slice-group group-content restrict-width-1000 text-align-center align-center align-center-absolute\">\n                      <div className=\"sqs-slice yui3-widget sqs-slice-lock sqs-slice-lock-content\" id=\"yui_3_17_2_1_1548269903322_102\" data-slice-type=\"lock\">\n                        <span className=\"icon-wrapper\">\n                          <div>\n                            <svg viewBox=\"0 0 64 64\">\n                              <g className=\"use-background\">\n                                <circle cx={32} cy={32} r={31} />\n                              </g>\n                              <g className=\"use-icon\">\n                                <path d=\"M40.2,29v-4c0-4.5-3.7-8.2-8.2-8.2s-8.2,3.7-8.2,8.2v4H21v15h22V29H40.2z M27.2,25 c0-2.6,2.1-4.8,4.8-4.8s4.8,2.1,4.8,4.8v4h-9.5V25z\" />\n                              </g>\n                              <g className=\"use-mask\">\n                                <path d=\"M0,0v64h64V0H0z M43,44H21V29h2.8v-4c0-4.5,3.7-8.2,8.2-8.2s8.2,3.7,8.2,8.2v4H43V44z M32,20.2 c-2.6,0-4.8,2.1-4.8,4.8v4h9.5v-4C36.8,22.4,34.6,20.2,32,20.2z\" />\n                              </g>\n                            </svg>\n                          </div>\n                        </span>\n                      </div>\n                      <div className=\"sqs-slice-group group-copy\">\n                        <div className=\"sqs-slice yui3-widget sqs-slice-heading sqs-slice-heading-content\" data-slice-type=\"heading\"><h1 id=\"sqs-slash-page-header\">SomaLab</h1>\n                        </div>\n                        <div className=\"sqs-slice yui3-widget sqs-slice-body sqs-slice-body-content\" data-slice-type=\"body\">\n                          <p>Thanks for stopping by! My work at <a href=\"https://www.msoma.org/\">M-Soma Institute</a> is covered by an NDA, so I can't share anything publicly. If you'd like to hear more about my work, please reach out at <a href=\"mailto:msurumen@berkeley.edu\">msurumen@berkeley.edu</a><br /><br />If we've already talked about it, please use the password I shared</p>\n                        </div>\n                      </div>\n                      <div className=\"sqs-slice yui3-widget sqs-slice-password sqs-slice-password-content sqs-slice-password-focused show-arrow\" data-slice-type=\"password\">\n                        <div className=\"input-container\">\n                          <input type=\"password\" tabIndex={1} name=\"password\" placeholder=\"Password\" />\n                          <div className=\"arrow-icon\">\n                            <div className=\"icon-wrapper arrow\">\n                              <div>\n                                <svg>\n                                  <g className=\"svg-icon\">\n                                    <polygon points=\"27.7,13.3 26.3,14.7 31.6,20 14,20 14,22 31.6,22 26.3,27.3 27.7,28.7 35.4,21 \" />\n                                  </g>\n                                </svg>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"error-message\" />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n      );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}